I"3<h1 id="localdate-localtime-localdatetime">LocalDate, LocalTime, LocalDateTime</h1>
<p>Java8부터 java.time(joda.time) api가 출시 됐기 때문에 Java Version 8 이상만 가능합니다.</p>

<h2 id="localdate">LocalDate</h2>
<p>로컬 날짜 클래스로 날짜 정보만 필요할 때 사용, 날짜 정보만 출력된다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">LocalDate</span> <span class="n">currentDate</span> <span class="o">=</span> <span class="nc">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">();</span>
<span class="nc">LocalDate</span> <span class="n">targetDate</span> <span class="o">=</span> <span class="nc">LocalDate</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="mi">2019</span><span class="o">,</span><span class="mi">11</span><span class="o">,</span><span class="mi">12</span><span class="o">);</span> 
</code></pre></div></div>

<h2 id="localtime">LocalTime</h2>
<p>로컬 시간 클래스로 시간 정보만 필요할 때 사용, 시간 정보만 출력된다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">LocalTime</span> <span class="n">currentTime</span> <span class="o">=</span> <span class="nc">LocalTime</span><span class="o">.</span><span class="na">now</span><span class="o">();</span> 
<span class="nc">LocalTime</span> <span class="n">targetTime</span> <span class="o">=</span> <span class="nc">LocalTime</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="mi">12</span><span class="o">,</span><span class="mi">33</span><span class="o">,</span><span class="mi">35</span><span class="o">,</span><span class="mi">22</span><span class="o">);</span>
</code></pre></div></div>

<h2 id="localdatetime">LocalDateTime</h2>
<p>날짜와 시간 정보 모두가 필요할 때 사용, 날짜와 시간정보가 출력된다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">LocalDateTime</span> <span class="n">currentDateTime</span> <span class="o">=</span> <span class="nc">LocalDateTime</span><span class="o">.</span><span class="na">now</span><span class="o">();</span>
<span class="nc">LocalDateTime</span> <span class="n">targetDateTime</span> <span class="o">=</span> <span class="nc">LocalDateTime</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="mi">2019</span><span class="o">,</span><span class="mi">11</span><span class="o">,</span><span class="mi">12</span><span class="o">,</span><span class="mi">12</span><span class="o">,</span><span class="mi">32</span><span class="o">,</span><span class="mi">22</span><span class="o">,</span><span class="mi">3333</span><span class="o">);</span> 
</code></pre></div></div>
<hr />

<h2 id="에러-발생">에러 발생</h2>
<p>PamStatus라는 Json형식의 Entity 데이터를 HttpUrlConnection으로 다른 API에 RequestBody 파라미터로 넘겨야 되는 경우가 있었다. 
PamStatus라는 Entity안에는 LocalDateTime의 타입의 변수가 있었는데 호출을 받는 API에서 아래와 같은 에러를 남겼다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Resolved</span> <span class="o">[</span><span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">http</span><span class="o">.</span><span class="na">converter</span><span class="o">.</span><span class="na">HttpMessageNotReadableException</span><span class="o">:</span> <span class="no">JSON</span> <span class="n">parse</span> <span class="nl">error:</span> <span class="nc">Expected</span> <span class="n">array</span> <span class="n">or</span> <span class="n">string</span><span class="o">.;</span> <span class="n">nested</span> <span class="n">exception</span> <span class="n">is</span> <span class="n">com</span><span class="o">.</span><span class="na">fasterxml</span><span class="o">.</span><span class="na">jackson</span><span class="o">.</span><span class="na">databind</span><span class="o">.</span><span class="na">exc</span><span class="o">.</span><span class="na">MismatchedInputException</span><span class="o">:</span> <span class="nc">Expected</span> <span class="n">array</span> <span class="n">or</span> <span class="n">string</span><span class="o">.</span>
<span class="n">at</span> <span class="o">[</span><span class="nl">Source:</span> <span class="o">(</span><span class="nc">PushbackInputStream</span><span class="o">);</span> <span class="nl">line:</span> <span class="mi">11</span><span class="o">,</span> <span class="nl">column:</span> <span class="mi">19</span><span class="o">]</span> <span class="o">(</span><span class="n">through</span> <span class="n">reference</span> <span class="nl">chain:</span> <span class="n">com</span><span class="o">.</span><span class="na">webhook</span><span class="o">.</span><span class="na">demo</span><span class="o">.</span><span class="na">WebhookParam</span><span class="o">[</span><span class="s">"createdDate"</span><span class="o">])]</span>
</code></pre></div></div>

<h2 id="--원인--출처--httpswwwinflearncomquestions30590">-&gt; 원인 : (출처 : <a href="https://www.inflearn.com/questions/30590">https://www.inflearn.com/questions/30590</a>)</h2>
<p>스프링은 기본적으로 LocalDateTime을 처리할 때 ISO8601 형태를 사용하도록 되어 있습니다.(스프링이 내부에서 사용하는 Jackson라이브러리에 설정을 다 해둔 것이지요.) 그래서 오류가 발생한 것이지요.. 
대략 읽어보면 array or string을 기대했는데, 맞지 않다라는 것이지요.
그럼 어떻게 해결해야 하는가? ObjectMapper가 ISO8601 형태로 날짜 타입을 처리할 수 있게 설정을 넣어주면 됩니다.
(구글에 다음과 같이 검색하면 됩니다. jackson localdate iso 8601)</p>

<p>LocalDateTime형식은 json에서 아래처럼 형식이 만들어진다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s">"createdDate"</span> <span class="o">:</span> <span class="o">{</span>
    <span class="s">"nano"</span> <span class="o">:</span> <span class="mi">584000000</span><span class="o">,</span>
    <span class="s">"year"</span> <span class="o">:</span> <span class="mi">2021</span><span class="o">,</span>
    <span class="s">"monthValue"</span> <span class="o">:</span> <span class="mi">4</span><span class="o">,</span>
    <span class="s">"dayOfMonth"</span> <span class="o">:</span> <span class="mi">26</span><span class="o">,</span>
    <span class="s">"hour"</span> <span class="o">:</span> <span class="mi">17</span><span class="o">,</span>
    <span class="s">"minute"</span> <span class="o">:</span> <span class="mi">25</span><span class="o">,</span>
    <span class="s">"second"</span> <span class="o">:</span> <span class="mi">50</span><span class="o">,</span>
    <span class="s">"month"</span> <span class="o">:</span> <span class="s">"APRIL"</span><span class="o">,</span>
    <span class="s">"dayOfWeek"</span> <span class="o">:</span> <span class="s">"MONDAY"</span><span class="o">,</span>
    <span class="s">"dayOfYear"</span> <span class="o">:</span> <span class="mi">116</span><span class="o">,</span>
    <span class="s">"chronology"</span> <span class="o">:</span> <span class="o">{</span>
      <span class="s">"id"</span> <span class="o">:</span> <span class="s">"ISO"</span><span class="o">,</span>
      <span class="s">"calendarType"</span> <span class="o">:</span> <span class="s">"iso8601"</span>
    <span class="o">}</span>
</code></pre></div></div>

<h2 id="--해결-">-&gt; 해결 :</h2>
<h3 id="json타입을-보내는-쪽-서버에서">Json타입을 보내는 쪽 서버에서</h3>
<p>application.yaml</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">spring:</span> 
  <span class="nl">jackson:</span>
    <span class="nl">serialization:</span>
      <span class="nl">WRITE_DATES_AS_TIMESTAMPS:</span> <span class="kc">false</span>
</code></pre></div></div>

<p>pamStatus.java</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nd">@JsonSerialize</span><span class="o">(</span><span class="n">using</span> <span class="o">=</span> <span class="nc">LocalDateTimeSerializer</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">LocalDateTime</span> <span class="n">createdDate</span><span class="o">;</span>
    <span class="nd">@JsonSerialize</span><span class="o">(</span><span class="n">using</span> <span class="o">=</span> <span class="nc">LocalDateTimeSerializer</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">LocalDateTime</span> <span class="n">updatedDate</span><span class="o">;</span>
</code></pre></div></div>

<h3 id="호출-받는-서버에서">호출 받는 서버에서</h3>

<p>WebhookParam.java</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nd">@JsonDeserialize</span><span class="o">(</span><span class="n">using</span> <span class="o">=</span> <span class="nc">LocalDateTimeDeserializer</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">LocalDateTime</span> <span class="n">createdDate</span><span class="o">;</span>

    <span class="nd">@JsonDeserialize</span><span class="o">(</span><span class="n">using</span> <span class="o">=</span> <span class="nc">LocalDateTimeDeserializer</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
    <span class="kd">private</span> <span class="nc">LocalDateTime</span> <span class="n">updatedDate</span><span class="o">;</span>
</code></pre></div></div>

<p>WebhookController.java</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">ObjectMapper</span> <span class="n">mapper</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ObjectMapper</span><span class="o">();</span>
<span class="n">mapper</span><span class="o">.</span><span class="na">registerModule</span><span class="o">(</span><span class="k">new</span> <span class="nc">JSR310Module</span><span class="o">());</span>
<span class="n">mapper</span><span class="o">.</span><span class="na">configure</span><span class="o">(</span><span class="nc">SerializationFeature</span><span class="o">.</span><span class="na">WRITE_DATES_AS_TIMESTAMPS</span><span class="o">,</span> <span class="kc">false</span><span class="o">);</span>
</code></pre></div></div>

<p>그러면 에러 없이 로그에 찍힌다. 🙌🙌</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">{</span> <span class="s">"transactionId"</span> <span class="o">:</span> <span class="s">"newwwwfinaltest"</span><span class="o">,</span>
  <span class="s">"pamKey"</span> <span class="o">:</span> <span class="s">"B42E99EBD61E"</span><span class="o">,</span>
  <span class="s">"scenarioName"</span> <span class="o">:</span> <span class="s">"시나리오네이이임"</span><span class="o">,</span>
  <span class="s">"equipName"</span> <span class="o">:</span> <span class="s">"eunmi"</span><span class="o">,</span>
  <span class="s">"equipCode"</span> <span class="o">:</span> <span class="mi">2086</span><span class="o">,</span>
  <span class="s">"isRunManager"</span> <span class="o">:</span> <span class="kc">true</span><span class="o">,</span>
  <span class="s">"isRunTray"</span> <span class="o">:</span> <span class="kc">true</span><span class="o">,</span>
  <span class="s">"runStatus"</span> <span class="o">:</span> <span class="s">"Ondemand"</span><span class="o">,</span>
  <span class="s">"details"</span> <span class="o">:</span> <span class="s">"최신!!!!!!!!!ヾ(•ω•`)oヾ(•ω•`)o~ "</span><span class="o">,</span>
  <span class="s">"createdDate"</span> <span class="o">:</span> <span class="s">"2021-04-26T17:41:08.653"</span><span class="o">,</span>
  <span class="s">"updatedDate"</span> <span class="o">:</span> <span class="s">"2021-04-26T17:41:08.653"</span><span class="o">,</span>
  <span class="s">"connectionStatus"</span> <span class="o">:</span> <span class="kc">null</span><span class="o">,</span>
  <span class="s">"webhookUrl"</span> <span class="o">:</span> <span class="kc">null</span><span class="o">,</span>
  <span class="s">"taskId"</span> <span class="o">:</span> <span class="s">"thisistaskId"</span>
<span class="o">}</span>
</code></pre></div></div>
:ET