I"-H<p>Rest Template은 RESTful Web Services를 사용하는 어플리케이션을 만들기 위해 사용된다.</p>

<p>exchange()메소드를 사용해서 모든 HTTP 메서드를 사용하는 웹 서비스를 사용할 수 있다.</p>

<p>아래 코드는 Rest Template을 Bean으로 만들어서 자등으로 Rest Template object를 만드는 방법을 보여준다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.tutorialspoint.demo</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">org.springframework.boot.SpringApplication</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.boot.autoconfigure.SpringBootApplication</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.context.annotation.Bean</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.web.client.RestTemplate</span><span class="o">;</span>

<span class="nd">@SpringBootApplication</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">DemoApplication</span> <span class="o">{</span>
   <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
      <span class="nc">SpringApplication</span><span class="o">.</span><span class="na">run</span><span class="o">(</span><span class="nc">DemoApplication</span><span class="o">.</span><span class="na">class</span><span class="o">,</span> <span class="n">args</span><span class="o">);</span>
   <span class="o">}</span>
   <span class="nd">@Bean</span>
   <span class="kd">public</span> <span class="nc">RestTemplate</span> <span class="nf">getRestTemplate</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="k">new</span> <span class="nf">RestTemplate</span><span class="o">();</span>
   <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="get">GET</h2>

<h3 id="resttemplate로-get-api-부르기---exchange-method">RestTemplate로 GET API 부르기 - exchange() method</h3>

<p><a href="http://localhost:8080/products">http://localhost:8080/products</a> URL이 아래 JSON을 반환한다고 했을 때 RestTemplate을 사용해서 API response를 consume 해보자</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="w">
   </span><span class="p">{</span><span class="w">
      </span><span class="nl">"id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Honey"</span><span class="w">
   </span><span class="p">},</span><span class="w">
   </span><span class="p">{</span><span class="w">
      </span><span class="nl">"id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Almond"</span><span class="w">
   </span><span class="p">}</span><span class="w">
</span><span class="p">]</span><span class="w">
</span></code></pre></div></div>

<p>API를 consume 하기 위해서 몇가지 포인트들이 있다.</p>

<ul>
  <li>Autowired the Rest Template Object.</li>
  <li>Use HttpHeaders to set the Request Headers.</li>
  <li>Use HttpEntity to wrap the request object.</li>
  <li>Provide the URL, HttpMethod, and Return type for Exchange() method.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RestController</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ConsumeWebService</span> <span class="o">{</span>
   <span class="nd">@Autowired</span>
   <span class="nc">RestTemplate</span> <span class="n">restTemplate</span><span class="o">;</span>

   <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/template/products"</span><span class="o">)</span>
   <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getProductList</span><span class="o">()</span> <span class="o">{</span>
      <span class="nc">HttpHeaders</span> <span class="n">headers</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpHeaders</span><span class="o">();</span>
      <span class="n">headers</span><span class="o">.</span><span class="na">setAccept</span><span class="o">(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="nc">MediaType</span><span class="o">.</span><span class="na">APPLICATION_JSON</span><span class="o">));</span>
      <span class="nc">HttpEntity</span> <span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;</span> <span class="n">entity</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpEntity</span><span class="o">&lt;</span><span class="nc">String</span><span class="o">&gt;(</span><span class="n">headers</span><span class="o">);</span>
      
      <span class="k">return</span> <span class="n">restTemplate</span><span class="o">.</span><span class="na">exchange</span><span class="o">(</span><span class="s">"
         http://localhost:8080/products"</span><span class="o">,</span> <span class="nc">HttpMethod</span><span class="o">.</span><span class="na">GET</span><span class="o">,</span> <span class="n">entity</span><span class="o">,</span> <span class="nc">String</span><span class="o">.</span><span class="na">class</span><span class="o">).</span><span class="na">getBody</span><span class="o">();</span>
   <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="post">POST</h2>

<h3 id="resttemplate-사용해서-post-api-부르기---exchange-method">RestTemplate 사용해서 POST API 부르기 - exchange() method</h3>

<p><a href="http://localhost:8080/products">http://localhost:8080/products</a> URL이 아래 response를 반환한다고 했을때 Rest Template를 사용해서 이 API Response를 consume 해보자.</p>

<p>아래 코드는 Request body 이다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">{</span>
   <span class="s">"id"</span><span class="o">:</span><span class="s">"3"</span><span class="o">,</span>
   <span class="s">"name"</span><span class="o">:</span><span class="s">"Ginger"</span>
<span class="o">}</span>
</code></pre></div></div>

<p>아래는 Response body 이다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Product</span> <span class="n">is</span> <span class="n">created</span> <span class="n">succesfully</span>
</code></pre></div></div>

<p>API를 consume 하기 위해서 몇가지 포인트들이 있다.</p>

<ul>
  <li>Autowired the Rest Template Object.</li>
  <li>Use the HttpHeaders to set the Request Headers.</li>
  <li>Use the HttpEntity to wrap the request object. Here, we wrap the Product object to send it to the request body.</li>
  <li>Provide the URL, httpMethod, and Return type for exchange() method.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RestController</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ConsumeWebService</span> <span class="o">{</span>
   <span class="nd">@Autowired</span>
   <span class="nc">RestTemplate</span> <span class="n">restTemplate</span><span class="o">;</span>

   <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/template/products"</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="nc">RequestMethod</span><span class="o">.</span><span class="na">POST</span><span class="o">)</span>
   <span class="kd">public</span> <span class="nc">String</span> <span class="nf">createProducts</span><span class="o">(</span><span class="nd">@RequestBody</span> <span class="nc">Product</span> <span class="n">product</span><span class="o">)</span> <span class="o">{</span>
      <span class="nc">HttpHeaders</span> <span class="n">headers</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpHeaders</span><span class="o">();</span>
      <span class="n">headers</span><span class="o">.</span><span class="na">setAccept</span><span class="o">(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="nc">MediaType</span><span class="o">.</span><span class="na">APPLICATION_JSON</span><span class="o">));</span>
      <span class="nc">HttpEntity</span><span class="o">&lt;</span><span class="nc">Product</span><span class="o">&gt;</span> <span class="n">entity</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpEntity</span><span class="o">&lt;</span><span class="nc">Product</span><span class="o">&gt;(</span><span class="n">product</span><span class="o">,</span><span class="n">headers</span><span class="o">);</span>
      
      <span class="k">return</span> <span class="n">restTemplate</span><span class="o">.</span><span class="na">exchange</span><span class="o">(</span>
         <span class="s">"http://localhost:8080/products"</span><span class="o">,</span> <span class="nc">HttpMethod</span><span class="o">.</span><span class="na">POST</span><span class="o">,</span> <span class="n">entity</span><span class="o">,</span> <span class="nc">String</span><span class="o">.</span><span class="na">class</span><span class="o">).</span><span class="na">getBody</span><span class="o">();</span>
   <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="put">PUT</h2>

<h3 id="resttemplate-사용해서-put-api-부르기---exchange-method">RestTemplate 사용해서 PUT API 부르기 - exchange() method</h3>

<p><a href="http://localhost:8080/products">http://localhost:8080/products</a> URL이 아래 response를 반환한다고 했을때 Rest Template를 사용해서 이 API Response를 consume 해보자.</p>

<p>Request body</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">{</span>
   <span class="s">"name"</span><span class="o">:</span><span class="s">"Indian Ginger"</span>
<span class="o">}</span>
</code></pre></div></div>

<p>Response body</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Product</span> <span class="n">is</span> <span class="n">updated</span> <span class="n">successfully</span>
</code></pre></div></div>

<p>API를 consume 하기 위해서 몇가지 포인트들이 있다.</p>

<ul>
  <li>Autowired the Rest Template Object.</li>
  <li>Use the HttpHeaders to set the Request Headers.</li>
  <li>Use the HttpEntity to wrap the request object. Here, we wrap the Product object to send it to the request body.</li>
  <li>Provide the URL, httpMethod, and Return type for exchange() method.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RestController</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ConsumeWebService</span> <span class="o">{</span>
   <span class="nd">@Autowired</span>
   <span class="nc">RestTemplate</span> <span class="n">restTemplate</span><span class="o">;</span>

   <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/template/products/{id}"</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="nc">RequestMethod</span><span class="o">.</span><span class="na">PUT</span><span class="o">)</span>
   <span class="kd">public</span> <span class="nc">String</span> <span class="nf">updateProduct</span><span class="o">(</span><span class="nd">@PathVariable</span><span class="o">(</span><span class="s">"id"</span><span class="o">)</span> <span class="nc">String</span> <span class="n">id</span><span class="o">,</span> <span class="nd">@RequestBody</span> <span class="nc">Product</span> <span class="n">product</span><span class="o">)</span> <span class="o">{</span>
      <span class="nc">HttpHeaders</span> <span class="n">headers</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpHeaders</span><span class="o">();</span>
      <span class="n">headers</span><span class="o">.</span><span class="na">setAccept</span><span class="o">(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="nc">MediaType</span><span class="o">.</span><span class="na">APPLICATION_JSON</span><span class="o">));</span>
      <span class="nc">HttpEntity</span><span class="o">&lt;</span><span class="nc">Product</span><span class="o">&gt;</span> <span class="n">entity</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpEntity</span><span class="o">&lt;</span><span class="nc">Product</span><span class="o">&gt;(</span><span class="n">product</span><span class="o">,</span><span class="n">headers</span><span class="o">);</span>
      
      <span class="k">return</span> <span class="n">restTemplate</span><span class="o">.</span><span class="na">exchange</span><span class="o">(</span>
         <span class="s">"http://localhost:8080/products/"</span><span class="o">+</span><span class="n">id</span><span class="o">,</span> <span class="nc">HttpMethod</span><span class="o">.</span><span class="na">PUT</span><span class="o">,</span> <span class="n">entity</span><span class="o">,</span> <span class="nc">String</span><span class="o">.</span><span class="na">class</span><span class="o">).</span><span class="na">getBody</span><span class="o">();</span>
   <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h2 id="delete">DELETE</h2>

<p>RestTemplate 사용해서 DELETE API 부르기 - exchange() method</p>

<p><a href="http://localhost:8080/products">http://localhost:8080/products</a>/3 URL이 아래 response를 반환한다고 했을때 Rest Template를 사용해서 이 API Response를 consume 해보자.</p>

<p>아래는 Response body</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Product</span> <span class="n">is</span> <span class="n">deleted</span> <span class="n">successfully</span>
</code></pre></div></div>

<p>API를 consume 하기 위해서 몇가지 포인트들이 있다.</p>

<ul>
  <li>Autowired the Rest Template Object.</li>
  <li>Use the HttpHeaders to set the Request Headers.</li>
  <li>Use the HttpEntity to wrap the request object.</li>
  <li>Provide the URL, httpMethod, and Return type for exchange() method.</li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@RestController</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">ConsumeWebService</span> <span class="o">{</span>
   <span class="nd">@Autowired</span>
   <span class="nc">RestTemplate</span> <span class="n">restTemplate</span><span class="o">;</span>

   <span class="nd">@RequestMapping</span><span class="o">(</span><span class="n">value</span> <span class="o">=</span> <span class="s">"/template/products/{id}"</span><span class="o">,</span> <span class="n">method</span> <span class="o">=</span> <span class="nc">RequestMethod</span><span class="o">.</span><span class="na">DELETE</span><span class="o">)</span>
   <span class="kd">public</span> <span class="nc">String</span> <span class="nf">deleteProduct</span><span class="o">(</span><span class="nd">@PathVariable</span><span class="o">(</span><span class="s">"id"</span><span class="o">)</span> <span class="nc">String</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
      <span class="nc">HttpHeaders</span> <span class="n">headers</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpHeaders</span><span class="o">();</span>
      <span class="n">headers</span><span class="o">.</span><span class="na">setAccept</span><span class="o">(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="nc">MediaType</span><span class="o">.</span><span class="na">APPLICATION_JSON</span><span class="o">));</span>
      <span class="nc">HttpEntity</span><span class="o">&lt;</span><span class="nc">Product</span><span class="o">&gt;</span> <span class="n">entity</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">HttpEntity</span><span class="o">&lt;</span><span class="nc">Product</span><span class="o">&gt;(</span><span class="n">headers</span><span class="o">);</span>
      
      <span class="k">return</span> <span class="n">restTemplate</span><span class="o">.</span><span class="na">exchange</span><span class="o">(</span>
         <span class="s">"http://localhost:8080/products/"</span><span class="o">+</span><span class="n">id</span><span class="o">,</span> <span class="nc">HttpMethod</span><span class="o">.</span><span class="na">DELETE</span><span class="o">,</span> <span class="n">entity</span><span class="o">,</span> <span class="nc">String</span><span class="o">.</span><span class="na">class</span><span class="o">).</span><span class="na">getBody</span><span class="o">();</span>
   <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>출처 : <a href="https://www.tutorialspoint.com/spring_boot/spring_boot_rest_template.htm">https://www.tutorialspoint.com/spring_boot/spring_boot_rest_template.htm</a></p>
:ET